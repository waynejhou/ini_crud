#!/bin/sh

# exit script on error
set -e

# assign usage
usage=$(
	cat <<EOUSAGE
Ini Curd v0.0.1

Usage: 
	$0 [-h] <ini_file> <section> <key>
	$0 [-h] -i <ini_file>
	$0 -h

Print value of key in [section] find in ini file

	-h 	Print usage and exit.
	-i 	Interactive mode.
EOUSAGE
)

# parse command-line arguments
interactive=false
while getopts ":hi" opt; do
	case ${opt} in
	h)
		echo "$usage"
		exit 0
		;;
	i)
		interactive=true
		;;
	\?)
		echo "$usage" >&2
		exit 1
		;;
	esac
done
shift $((OPTIND - 1))

# check argument count
if [ $# -lt 1 ]; then
	echo "Error: <ini_file> is needed!" >&2
	echo "$usage" >&2
	exit 1
fi

# check file exist
ini_file="$1"
if [ ! -f "$ini_file" ]; then
	echo "Error: $ini_file not found" >&2
	exit 1
fi

if $interactive; then
	sections=$(grep '^[[:space:]]*\[[a-zA-Z0-9_ "\-]*\]' "$ini_file")
	sections=$(echo "$sections" | sed 's/^\[//g; s/\]$//g;')
	options=$(echo "$sections" | sed '=' | sed 'N;s/\n/) /;')
	echo "$options"
	read section
	if ! echo "$section" | grep -q -E '[0-9]+'; then
		echo Error: Input not number >&2
		exit 1
	fi
	section=$(echo "$sections" | sed -n "${section}p")

	sed_script_get_section_only_content='/^\['$section'\]$/,/^\[/!d;'
	keys=$(sed $sed_script_get_section_only_content $ini_file | grep '^[[:space:]]*[^=]*=')
	keys=$(echo "$keys" | sed 's/=.*$//g; s/^[[:space:]]*//g; s/[[:space:]]*$//g')
	options=$(echo "$keys" | sed '=' | sed 'N;s/\n/) /;')
	echo "$options"
	read key
	if ! echo "$key" | grep -q -E '[0-9]+'; then
		echo Error: Input not number >&2
		exit 1
	fi
	key=$(echo "$keys" | sed -n "${key}p")
else
	# check argument count
	if [ $# -lt 3 ]; then
		echo "Error: <section> <key> is needed!" >&2
		echo "$usage" >&2
		exit 1
	fi

	# assign section and key
	section="$2"
	key="$3"
fi

# check section exists in ini
grep_expr_check_section='^\['$section']'
if ! grep -q "$grep_expr_check_section" "$ini_file"; then
	echo "Error: [$section] not found in $ini_file" >&2
	exit 1
fi

# check key exists in section of ini

# script explain:
#     1. sed delete all lines from ini_file except line with matched key
#     2. grep check pattern ^[[:space:]]*$key[[:space:]]*= exist from pipe

sed_script_get_section_only_content='/^\['$section'\]$/,/^\[/!d;'
grep_expr_check_key='^[[:space:]]*'$key'[[:space:]]*='

if ! sed "$sed_script_get_section_only_content" "$ini_file" | grep -q $grep_expr_check_key; then
	echo "Error: $key not found in section [$section] of $ini_file" >&2
	exit 1
fi

# get value

# script explain:
# 	1. sed delete all lines from ini_file except line with matched key
# 	2. grep splite line into following syntex parts:
# 		key: ^[^=]+
# 		comment: [#;].+$
# 		multiple values:
# 			quotation field: "[^"]*"
# 			normal value: [^#;="]+
# 		value without comment: [^#;=]+$
# 	3. sed get line 2 (value part)
# 	4. sed trim spaces

sed_script_get_value=$sed_script_get_section_only_content'  /^[[:space:]]*'$key'[[:space:]]*=/!d;'
value=$(sed "$sed_script_get_value" "$ini_file")
value=$(echo "$value" | grep -o -E '(^[^=]+)|([#;].+$)|(("[^"]*")|([^#;="]+))+|([^#;=]+$)')
value=$(echo "$value" | sed -n '2p')
value=$(echo "$value" | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')

if ! [ -z "$value" ]; then
	echo "$value"
fi
